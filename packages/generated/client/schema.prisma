// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  output   = "../../generated/client"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum IntegrationType {
  GITHUB
  DISCORD
  SLACK
}

model User {
  id           String        @id @default(uuid())
  email        String        @unique
  password     String
  name         String
  avatar       String?
  rooms        Room[]
  chats        Chat[]
  Integrations Integration[]
}

model Room {
  id        Int      @id @default(autoincrement())
  slug      String   @unique
  createdAt DateTime @default(now())
  adminId   String
  admin     User     @relation(fields: [adminId], references: [id])
  chats     Chat[]
}

model Chat {
  id      Int     @id @default(autoincrement())
  roomId  Int
  message String
  userId  String
  gifUrl  String?
  room    Room    @relation(fields: [roomId], references: [id])
  user    User    @relation(fields: [userId], references: [id])
}

model Integration {
  id             String          @id @default(cuid())
  type           IntegrationType
  accessToken    String // Encrypted
  refreshToken   String? // Encrypted, optional
  tokenExpiresAt DateTime?
  scope          String[]
  metadata       Json? // Store additional provider-specific data
  isActive       Boolean         @default(true)
  user           User            @relation(fields: [userId], references: [id])
  userId         String
  createdAt      DateTime        @default(now())
  updatedAt      DateTime        @updatedAt

  @@unique([userId, type])
}
